{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMBKdgMoczt1GEW4H5kN2T0"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#1. THEORY QUESTIONS"],"metadata":{"id":"7JdPT8t0t8zq"}},{"cell_type":"markdown","source":["1. . What is Python, and why is it popular?\n","\n","Python is a high-level, interpreted programming language known for its simplicity and readability. It is popular because:\n","\n","It has a clean and easy-to-learn syntax.\n","It supports multiple programming paradigms (procedural, object-oriented, functional).\n","It has a vast standard library and a strong community.\n","It is widely used in web development, data science, machine learning, and automation."],"metadata":{"id":"NGFaEuGuuHeg"}},{"cell_type":"markdown","source":["2. What is an interpreter in Python?\n","\n","An interpreter in Python is a program that executes Python code line by line. Unlike compiled languages (like C or Java), Python does not require a separate compilation step, making it easier to debug and test code.\n","\n"],"metadata":{"id":"r32xRFFiujGY"}},{"cell_type":"markdown","source":["3. What are pre-defined keywords in Python?\n","\n","Pre-defined keywords in Python are reserved words that have special meanings and cannot be used as variable names. Examples include if, else, for, while, def, return, import, etc.\n","\n","You can see all Python keywords using:\n","import keyword\n","print(keyword.kwlist)\n"],"metadata":{"id":"yXTgu3EPuqp0"}},{"cell_type":"markdown","source":["4. Can keywords be used as variable names?\n","\n","No, keywords cannot be used as variable names because they have special meanings in Python. If you try, you'll get a syntax error.\n","\n","Example:\n","\n","python\n","Copy\n","Edit\n","if = 10  #  This will cause an error"],"metadata":{"id":"yal0UJw-vBX_"}},{"cell_type":"markdown","source":["5. What is mutability in Python?\n","\n","Mutability refers to whether an object’s value can be changed after creation.\n","\n","Mutable objects: Can be modified (e.g., lists, dictionaries, sets).\n","Immutable objects: Cannot be modified (e.g., tuples, strings, numbers)"],"metadata":{"id":"dBHQoRxbvIsT"}},{"cell_type":"markdown","source":["6. Why are lists mutable, but tuples are immutable?\n","\n","Lists are mutable because their elements can be changed, added, or removed after creation.\n","Tuples are immutable because their structure is fixed, ensuring data consistency and making them hashable (usable as dictionary keys).\n","Example:\n","\n","python\n","Copy\n","Edit\n","# Mutable list\n","lst = [1, 2, 3]\n","lst[0] = 10  #  Allowed\n","\n","# Immutable tuple\n","tup = (1, 2, 3)\n","tup[0] = 10  #  Error: Tuples cannot be modified\n"],"metadata":{"id":"4T6bCSfCvfIR"}},{"cell_type":"markdown","source":["\n","7. What is the difference between == and is operators in Python?\n","\n","== compares values (checks if two variables have the same content).\n","is compares identity (checks if two variables refer to the same memory location).\n","Example:\n","\n","python\n","Copy\n","Edit\n","a = [1, 2, 3]\n","b = [1, 2, 3]\n","c = a\n","\n","print(a == b)  #  True (Same values)\n","print(a is b)  #  False (Different objects in memory)\n","print(a is c)  #  True (Same object in memory)"],"metadata":{"id":"lhFCOHa9vr2V"}},{"cell_type":"markdown","source":[],"metadata":{"id":"EbfKz1WFvUqe"}},{"cell_type":"markdown","source":[],"metadata":{"id":"8xnqb6O0u153"}},{"cell_type":"markdown","source":["8. What are logical operators in Python?\n","\n","Logical operators are used for boolean logic operations:\n","\n","and → Returns True if both conditions are True\n","or → Returns True if at least one condition is True\n","not → Returns the opposite boolean value\n","Example:\n","\n","python\n","Copy\n","Edit\n","x = True\n","y = False\n","\n","print(x and y)  # False\n","print(x or y)   # True\n","print(not x)    # False"],"metadata":{"id":"gC_4djwev4Ig"}},{"cell_type":"markdown","source":["9. What is type casting in Python?\n","\n","Type casting is converting one data type into another.\n","Example:\n","\n","python\n","Copy\n","Edit\n","# Converting string to integer\n","num_str = \"10\"\n","num_int = int(num_str)\n","print(num_int, type(num_int))  # Output: 10 <class 'int'>"],"metadata":{"id":"taDML3E3v-yZ"}},{"cell_type":"markdown","source":["10. What is the difference between implicit and explicit type casting?\n","\n","Implicit Type Casting (Automatic) → Python automatically converts types when safe.\n","python\n","Copy\n","Edit\n","num = 5   # Integer\n","result = num + 2.5  # Automatically converts 5 to float (5.0)\n","print(result)  # Output: 7.5\n","Explicit Type Casting (Manual) → The programmer manually converts data types.\n","python\n","Copy\n","Edit\n","num = \"10\"\n","converted_num = int(num)  # Manually converting string to integer\n"],"metadata":{"id":"4oQtMTS9wDHJ"}},{"cell_type":"markdown","source":["11. What is the purpose of conditional statements in Python?\n","\n","Conditional statements control the flow of execution based on conditions. They allow decisions in the program using if, elif, and else.\n","\n","Example:\n","\n","python\n","Copy\n","Edit\n","age = 18\n","if age >= 18:\n","    print(\"You are an adult.\")\n","else:\n","    print(\"You are a minor.\")\n"],"metadata":{"id":"TxMaHK_AwPHG"}},{"cell_type":"markdown","source":["12. How does the elif statement work?\n","\n","The elif (short for else if) statement is used to check multiple conditions in sequence.\n","\n","Example:\n","\n","python\n","Copy\n","Edit\n","score = 75\n","\n","if score >= 90:\n","    print(\"Grade: A\")\n","elif score >= 75:\n","    print(\"Grade: B\")  # This block runs because 75 ≥ 75\n","elif score >= 50:\n","    print(\"Grade: C\")\n","else:\n","    print(\"Grade: F\")"],"metadata":{"id":"QOcsSTd9wT_g"}},{"cell_type":"markdown","source":["13. What is the difference between for and while loops?\n","\n","For loop → Used when the number of iterations is known.\n","While loop → Used when the number of iterations is unknown and depends on a condition.\n","Example of a for loop:\n","\n","python\n","Copy\n","Edit\n","for i in range(1, 6):  # Runs 5 times (1 to 5)\n","    print(i)\n","Example of a while loop:\n","\n","python\n","Copy\n","Edit\n","count = 1\n","while count <= 5:  # Runs until count exceeds 5\n","    print(count)\n","    count += 1\n"],"metadata":{"id":"vMZOIRxFwbXe"}},{"cell_type":"markdown","source":["14. Describe a scenario where a while loop is more suitable than a for loop?\n","\n","A while loop is better when we don't know how many times the loop should run in advance.\n","\n","Example: Repeating user input until valid data is entered\n","\n","python\n","Copy\n","Edit\n","user_input = \"\"\n","while user_input.lower() != \"yes\":\n","    user_input = input(\"Type 'yes' to exit: \")\n","print(\"Thank you!\")\n","Here, we don't know how many times the user will enter incorrect input, making while the better choice."],"metadata":{"id":"lTakNMB0wh2a"}},{"cell_type":"markdown","source":["# Practical Questions"],"metadata":{"id":"B5o9g_zAxQMn"}},{"cell_type":"markdown","source":["1. Write a Python program to print \"Hello, World!\"?"],"metadata":{"id":"ba02lw2VxwyH"}},{"cell_type":"code","source":["print(\"Hello, World!\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"i8MNAHb_yH3_","executionInfo":{"status":"ok","timestamp":1738501822084,"user_tz":-330,"elapsed":432,"user":{"displayName":"Kshitiz Singhal","userId":"17881831293296703230"}},"outputId":"47c44ee2-22f6-4cd7-dc9f-e641b7c99599"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Hello, World!\n"]}]},{"cell_type":"markdown","source":["2.  Write a Python program that displays your name and age."],"metadata":{"id":"NYGCL5ltyKJg"}},{"cell_type":"code","source":["name = \"kshitiz singhal\"\n","age = 21\n","print(f\"My name is {name} and I am {age} years old.\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uyjRmnDsyPyS","executionInfo":{"status":"ok","timestamp":1738501904778,"user_tz":-330,"elapsed":380,"user":{"displayName":"Kshitiz Singhal","userId":"17881831293296703230"}},"outputId":"478a2db3-1966-45a2-d793-dac56fa3022a"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["My name is kshitiz singhal and I am 21 years old.\n"]}]},{"cell_type":"markdown","source":["3.  Write code to print all the pre-defined keywords in Python using the keyword library."],"metadata":{"id":"48Zu7NVTye0w"}},{"cell_type":"code","source":["import keyword\n","print(keyword.kwlist)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OWX0HnwJyo50","executionInfo":{"status":"ok","timestamp":1738501993933,"user_tz":-330,"elapsed":389,"user":{"displayName":"Kshitiz Singhal","userId":"17881831293296703230"}},"outputId":"65ad5109-a853-40be-b9f8-36aab5fa4272"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["['False', 'None', 'True', 'and', 'as', 'assert', 'async', 'await', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield']\n"]}]},{"cell_type":"markdown","source":["4. Write a program that checks if a given word is a Python keyword."],"metadata":{"id":"0mWOotYTy16o"}},{"cell_type":"code","source":["import keyword\n","\n","word = input(\"Enter a word: \")\n","if keyword.iskeyword(word):\n","    print(f\"{word} is a Python keyword.\")\n","else:\n","    print(f\"{word} is not a Python keyword.\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-qizm6wBy7ul","executionInfo":{"status":"ok","timestamp":1738502088066,"user_tz":-330,"elapsed":30229,"user":{"displayName":"Kshitiz Singhal","userId":"17881831293296703230"}},"outputId":"05cf51d0-d21d-41b6-909c-4f6015f20c15"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter a word: if\n","if is a Python keyword.\n"]}]},{"cell_type":"markdown","source":["5. Create a list and tuple in Python, and demonstrate how attempting to change an element works differently\n","for each."],"metadata":{"id":"ym8GdC5_zLQ0"}},{"cell_type":"code","source":["# List\n","my_list = [1, 2, 3]\n","my_list[0] = 10\n","print(\"Modified list:\", my_list)\n","\n","# Tuple\n","my_tuple = (1, 2, 3)\n","try:\n","    my_tuple[0] = 10\n","except TypeError as e:\n","    print(\"Error:\", e)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DfWskmw-zPre","executionInfo":{"status":"ok","timestamp":1738502156022,"user_tz":-330,"elapsed":423,"user":{"displayName":"Kshitiz Singhal","userId":"17881831293296703230"}},"outputId":"c75bcff6-2e24-4a22-9b50-a58864f0d49f"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Modified list: [10, 2, 3]\n","Error: 'tuple' object does not support item assignment\n"]}]},{"cell_type":"markdown","source":["6. Write a function to demonstrate the behavior of mutable and immutable arguments."],"metadata":{"id":"UrAcvgPg6tDr"}},{"cell_type":"code","source":["# Mutable objects (e.g., lists)\n","my_list = [1, 2, 3]\n","print(my_list)\n","\n","my_list.append(4)\n","print(my_list)\n","\n","# Immutable objects (e.g., strings)\n","my_string = \"Hello\"\n","print(my_string)\n","\n","my_string += \" World\"  # This creates a new string\n","print(my_string)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"F9F64t-r016M","executionInfo":{"status":"ok","timestamp":1738502567888,"user_tz":-330,"elapsed":424,"user":{"displayName":"Kshitiz Singhal","userId":"17881831293296703230"}},"outputId":"ff6a9cc5-5ded-40ee-eb75-26cce0c71e46"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["[1, 2, 3]\n","[1, 2, 3, 4]\n","Hello\n","Hello World\n"]}]},{"cell_type":"markdown","source":["7. Write a function to demonstrate the behavior of mutable and immutable arguments."],"metadata":{"id":"YgMmpueAz0E_"}},{"cell_type":"code","source":["# Mutable objects (e.g., lists)\n","my_list = [1, 2, 3]\n","print(my_list)\n","\n","my_list.append(4)\n","print(my_list)\n","\n","# Immutable objects (e.g., strings)\n","my_string = \"Hello\"\n","print(my_string)\n","\n","my_string += \" World\"  # This creates a new string\n","print(my_string)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WjNyGYPxz_uQ","executionInfo":{"status":"ok","timestamp":1738504348861,"user_tz":-330,"elapsed":433,"user":{"displayName":"Kshitiz Singhal","userId":"17881831293296703230"}},"outputId":"63503470-a8ce-47e5-89cd-a68a546cd50b"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["[1, 2, 3]\n","[1, 2, 3, 4]\n","Hello\n","Hello World\n"]}]},{"cell_type":"markdown","source":["8.  Write a program to demonstrate the use of logical operator."],"metadata":{"id":"VNeaFdbc0JYC"}},{"cell_type":"code","source":["a = True\n","b = False\n","\n","print(\"a and b:\", a and b)\n","print(\"a or b:\", a or b)\n","print(\"not a:\", not a)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zzWkoBFs0UZt","executionInfo":{"status":"ok","timestamp":1738504344179,"user_tz":-330,"elapsed":616,"user":{"displayName":"Kshitiz Singhal","userId":"17881831293296703230"}},"outputId":"f366463a-6aee-4b08-8f1e-7448db149ada"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["a and b: False\n","a or b: True\n","not a: False\n"]}]},{"cell_type":"markdown","source":["9. Write a Python program to convert user input from string to integer, float, and boolean types."],"metadata":{"id":"pSY6c0QK1JcZ"}},{"cell_type":"code","source":["user_input = input(\"Enter a value: \")\n","\n","int_value = int(user_input)\n","float_value = float(user_input)\n","bool_value = bool(user_input)\n","\n","print(\"Integer:\", int_value)\n","print(\"Float:\", float_value)\n","print(\"Boolean:\", bool_value)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DL-RlJBI2cdC","executionInfo":{"status":"ok","timestamp":1738504340666,"user_tz":-330,"elapsed":4130,"user":{"displayName":"Kshitiz Singhal","userId":"17881831293296703230"}},"outputId":"43385634-b5f7-48b9-f445-1459180b0efd"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter a value: 9\n","Integer: 9\n","Float: 9.0\n","Boolean: True\n"]}]},{"cell_type":"markdown","source":["10.  Write code to demonstrate type casting with list elements."],"metadata":{"id":"FEU50AL32uRy"}},{"cell_type":"code","source":["my_list = [\"1\", \"2\", \"3\"]\n","int_list = list(map(int, my_list))\n","print(\"Converted list:\", int_list)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2aLkvBza21HI","executionInfo":{"status":"ok","timestamp":1738504332264,"user_tz":-330,"elapsed":2,"user":{"displayName":"Kshitiz Singhal","userId":"17881831293296703230"}},"outputId":"d71fdb95-a267-4c43-bbe2-0feff84a4601"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["Converted list: [1, 2, 3]\n"]}]},{"cell_type":"markdown","source":["11.  Write a program that checks if a number is positive, negative, or zero."],"metadata":{"id":"suWoq7lQ3GpQ"}},{"cell_type":"code","source":["num = float(input(\"Enter a number: \"))\n","\n","if num > 0:\n","    print(\"The number is positive.\")\n","elif num < 0:\n","    print(\"The number is negative.\")\n","else:\n","    print(\"The number is zero.\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iHqzRGNv3NU-","executionInfo":{"status":"ok","timestamp":1738504332264,"user_tz":-330,"elapsed":9660,"user":{"displayName":"Kshitiz Singhal","userId":"17881831293296703230"}},"outputId":"f7ea66ce-0a29-4c59-e545-a1a099339af5"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter a number: 9\n","The number is positive.\n"]}]},{"cell_type":"markdown","source":["12.  Write a for loop to print numbers from 1 to 10."],"metadata":{"id":"HWOsAA-m3RBm"}},{"cell_type":"code","source":["for i in range(1, 11):\n","    print(i)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7tBrtQeV3s3R","executionInfo":{"status":"ok","timestamp":1738504318510,"user_tz":-330,"elapsed":4,"user":{"displayName":"Kshitiz Singhal","userId":"17881831293296703230"}},"outputId":"5eddeb52-7bcc-4506-fba0-bc2e63f84dac"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","2\n","3\n","4\n","5\n","6\n","7\n","8\n","9\n","10\n"]}]},{"cell_type":"markdown","source":["13.  Write a Python program to find the sum of all even numbers between 1 and 50 ."],"metadata":{"id":"C0sKWwgz3-G3"}},{"cell_type":"code","source":["total = sum(i for i in range(1, 51) if i % 2 == 0)\n","print(\"Sum of even numbers:\", total)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X3aXrQJU4E1b","executionInfo":{"status":"ok","timestamp":1738504315433,"user_tz":-330,"elapsed":401,"user":{"displayName":"Kshitiz Singhal","userId":"17881831293296703230"}},"outputId":"a1e9ab0d-2cdf-409e-ad59-b3480a5a3fd8"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Sum of even numbers: 650\n"]}]},{"cell_type":"markdown","source":["14. Write a program to reverse a string using a while loop."],"metadata":{"id":"wwaNeZAS72HO"}},{"cell_type":"code","source":["text = input(\"Enter a string: \")\n","reversed_text = \"\"\n","index = len(text) - 1\n","\n","while index >= 0:\n","    reversed_text += text[index]\n","    index -= 1\n","\n","print(\"Reversed string:\", reversed_text)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sJnFY3Xy79h-","executionInfo":{"status":"ok","timestamp":1738504419427,"user_tz":-330,"elapsed":7769,"user":{"displayName":"Kshitiz Singhal","userId":"17881831293296703230"}},"outputId":"ea94269e-a3c2-4011-b159-0ffe8498b3c5"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter a string: kshitiz\n","Reversed string: zitihsk\n"]}]},{"cell_type":"markdown","source":["15. Write a Python program to calculate the factorial of a number provided by the user using a while loop."],"metadata":{"id":"db07zjz38Fb-"}},{"cell_type":"code","source":["num = int(input(\"Enter a number: \"))\n","factorial = 1\n","i = num\n","\n","while i > 0:\n","    factorial *= i\n","    i -= 1\n","\n","print(f\"Factorial of {num} is {factorial}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R9jiYcLI8Mhz","executionInfo":{"status":"ok","timestamp":1738504522520,"user_tz":-330,"elapsed":2372,"user":{"displayName":"Kshitiz Singhal","userId":"17881831293296703230"}},"outputId":"82886f5c-ef2c-4044-d67b-cd37c64d0c7e"},"execution_count":30,"outputs":[{"output_type":"stream","name":"stdout","text":["Enter a number: 10\n","Factorial of 10 is 3628800\n"]}]}]}